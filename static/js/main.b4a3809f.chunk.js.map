{"version":3,"sources":["context/AuthProvider.js","components/CenterContainer.js","components/PrivateRoute.js","components/Logo/Logo.png","components/Logo/Logo.js","components/QuestionContainer.js","views/auth/style.js","views/auth/SignUp.js","views/auth/Login.js","views/auth/ForgetPassword.js","views/auth/Profile.js","firebase.js","views/Home.js","views/QuestionsList.js","views/Forum.js","App.js","model/UserModel.js","index.js"],"names":["AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","auth","getAuth","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","CenterContainer","Container","className","style","marginTop","maxWidth","PrivateRoute","to","Logo","src","logo","alt","QuestionContainer","width","minWidth","StyledCard","styled","Card","StyledForm","Form","StyledTitle","h2","StyledLink","div","StyledEmailIcon","Envelope","StyledPasswordIcon","Lock","StyledButton","Button","StyledInput","InputGroup","StyledIcon","StyledCollapse","Collapse","StyledQuestionItemTitle","StyledTimestampSmall","StyledUsernameSmall","StyledQuestionTitle","StyledQuestionText","StyledMessage","StyledUserMessage","StyledTimeMessage","StyledButtonAnswer","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","navigate","useNavigate","e","a","preventDefault","current","onSubmit","Alert","variant","id","Control","type","placeholder","name","ref","required","disabled","Login","ForgetPassword","message","setMessage","Profile","open","setOpen","push","Body","charAt","toUpperCase","Group","onClick","in","promises","Promise","all","then","catch","finally","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getFirestore","getCourses","coursesCol","collection","getDocs","coursesSnapshot","coursesList","docs","map","doc","data","theme","extendTheme","textStyles","h1","fontSize","lineHeight","letterSpacing","colors","kth","Home","useDisclosure","isOpen","onOpen","onClose","placement","btnRef","courses","useSWR","undefined","colorScheme","icon","textStyle","size","course","padding","w","borderColor","boxShadow","borderRadius","backgroundColor","trim","goToCourse","finalFocusRef","shadow","margin","QuestionsList","getQuestions","questionsCollection","questionsQuery","query","where","courseID","snapshot","questions","sort","b","date","seconds","useLocation","pathname","replace","console","log","length","ListGroup","question","Item","action","goToQuestion","title","userName","timestamp","Date","toLocaleString","Forum","toDate","idQuestion","getDoc","questionsSnapshot","getMessages","messagesCollection","messagesQuery","messagesSnapshot","messagesList","messages","newAnswer","setNewAnswer","text","onChange","event","target","newAnswerObject","setDoc","updateAnswer","questionId","now","nanoseconds","App","props","model","exact","path","element","UserModel","this","observers","_currentUser","_courses","newValue","notifyObservers","callback","filter","observer","forEach","setTimeout","myModel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4a3809f.chunk.js","sourcesContent":["import React, {useContext, useState, useEffect} from 'react'\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail, onAuthStateChanged } from \"firebase/auth\";\n\n\nconst AuthContext = React.createContext()\n\nexport function useAuth(){\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({children}) {\n    const [currentUser, setCurrentUser]=useState();\n    const [loading, setLoading] = useState(true)\n    const auth = getAuth();\n    \n    function signup(email, password){\n        return createUserWithEmailAndPassword(auth, email, password)\n    }\n\n    function login(email, password) {\n        return signInWithEmailAndPassword(auth, email, password)\n    }\n\n    function logout() {\n        return signOut(auth)\n    }\n\n    function resetPassword(email) {\n        return sendPasswordResetEmail(auth, email)\n    }\n\n    function updateEmail(email) {\n        return currentUser.updateEmail(email)\n    }\n\n    function updatePassword(password) {\n        return currentUser.updatePassword(password)\n    }\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, user=> {\n            setCurrentUser(user);\n            setLoading(false);\n        })\n        return unsubscribe\n    }, [])\n\n    \n    const value={\n        currentUser,\n        signup,\n        login,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword\n    }\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","import { Container } from 'react-bootstrap';\nimport './style.css'\n\nfunction CenterContainer({ children }) {\n    return (\n        <Container className=\"center-container d-flex algin-items-center justify-content-center\" >\n            <div className=\"w-100\" style={{ marginTop: \"50px\", maxWidth: \"400px\" }}>\n                {children}\n            </div>\n        </Container>\n    );\n}\n\nexport default CenterContainer","import React from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { useAuth } from '../context/AuthProvider';\n// export default function PrivateRoute(props) {\n//     const { currentUser } = useAuth();\n//     const {\n//         model,\n//         children,\n//         ...rest // other props passed to the route\n//     } = props;\n\n//     return currentUser ? <div>{children}</div> : <Navigate to=\"/login\" />\n// }\n\nconst PrivateRoute= () => {\n    const { currentUser } = useAuth();\n    return currentUser ? <Outlet/> : <Navigate to=\"/login\" />\n}\n\nexport default PrivateRoute;","export default __webpack_public_path__ + \"static/media/Logo.6af7f559.png\";","import React from \"react\";\nimport logo from \"./Logo.png\";\nimport \"./Logo.css\";\n\nexport default function Logo() {\n  return (\n    <div>\n      <img className=\"logo\" src={logo} alt=\"logo\" />\n    </div>\n  );\n}\n","import { Container } from 'react-bootstrap';\nimport './style.css'\n\nfunction QuestionContainer({ children }) {\n    return (\n        <Container className=\"center-container d-flex algin-items-center justify-content-center\" >\n            <div className=\"w-100\" style={{ marginTop: \"0px\", width: \"100%\", minWidth: \"100vw\"}}>\n                {children}\n            </div>\n        </Container>\n    );\n}\n\nexport default QuestionContainer","import styled from \"styled-components\";\nimport { Button, Card, InputGroup, Form, Collapse } from \"react-bootstrap\";\nimport { Envelope, Lock } from \"react-bootstrap-icons\";\n\nexport const StyledCard = styled(Card)`\n  background-color: #e5e5e5;\n  border: none;\n  display: flex;\n  padding: 20px;\n  margin: 20px;\n  max-width: 400px;\n  text-align: center;\n  align-content: center;\n  font-family: Georgia, \"Times New Roman\", Times, serif;\n`;\n\nexport const StyledForm = styled(Form)`\n  align-content: center;\n  text-align: center;\n  font-family: Georgia, \"Times New Roman\", Times, serif;\n`;\n\nexport const StyledTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nexport const StyledLink = styled.div`\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n  font-family: Georgia, \"Times New Roman\", Times, serif;\n`;\n\nexport const StyledEmailIcon = styled(Envelope)`\n  display: inline-block;\n  height: 36px;\n  width: 20px;\n  margin-right: 10px;\n  text-align: center;\n`;\n\nexport const StyledPasswordIcon = styled(Lock)`\n  display: inline-block;\n  height: 36px;\n  width: 20px;\n  margin-right: 10px;\n  text-align: center;\n`;\n\nexport const StyledButton = styled(Button)`\n  background: #f5f5f5;\n  color: black;\n  border-radius: 30px;\n  width: 150px;\n  margin-bottom: 35px;\n  font-family: Georgia, \"Times New Roman\", Times, serif;\n`;\n\nexport const StyledInput = styled(InputGroup)`\n  width: 100%;\n  border-radius: 30px;\n  margin-bottom: 20px;\n  vertical-align: middle;\n  text-align: center;\n  font-family: Georgia, \"Times New Roman\", Times, serif;\n`;\n\nexport const StyledIcon = styled.div`\n  display: inline-block;\n  background-color: whitesmoke;\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 40px;\n  font-weight: bold;\n  margin-right: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledCollapse = styled(Collapse)`\n  background: whitesmoke;\n  width: 100%;\n  padding: 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledQuestionItemTitle = styled.h2`\n    text-align: left; \n    margin-bottom: 5px;\n`;\n\nexport const StyledTimestampSmall = styled.div`\n    text-align:right;\n    font-size:10px;\n    bottom-margin:5px;\n    opacity:0.8;\n`;\n\nexport const StyledUsernameSmall = styled.div`\n    text-align:left;\n    font-size:14px;\n    bottom-margin:5px;\n`;\n\nexport const StyledInputQuestion = styled(InputGroup)`\n    width: 100%;\n    min-height: 100px;\n    border-radius: 30px;\n    margin-bottom: 20px;\n    vertical-align: middle;\n    multi-line: true;\n    text-align: center;\n    font-family: Georgia, \"Times New Roman\", Times, serif;\n`;\n\nexport const StyledQuestionTitle = styled.div`\n    horizontal-align: center;\n    margin: 0 auto;\n    padding: 30px;\n    font-size: 25px;\n    text-align:center;\n    width:100%;\n    background-color: #1A54A6;\n`;\n\nexport const StyledQuestionText = styled.div`\n    font-size: 20px;\n    text-align:justify;\n`;\n\nexport const StyledMessage = styled.div`\n    margin: 10px auto;\n    font-size: 20px;\n    text-aligh: left;\n    background-color: #D1D1D1;\n    width:95%;\n    padding:30px;\n\n`;\n\nexport const StyledUserMessage = styled.div`\n    text-align:left;\n`;\n\nexport const StyledTimeMessage = styled.div`\n    text-align:right;\n    font-size:16px;\n    bottom-margin:50px;\n`;\n\nexport const StyledButtonAnswer = styled(Button)`\n    background: #F5F5F5;\n    color: black;\n    border-radius: 30px;\n    font-size: 20px;\n    margin: 0;\n    font-family: Georgia, \"Times New Roman\", Times, serif;\n    transform: translateX(25vh);\n`;","import { Link, useNavigate } from \"react-router-dom\";\nimport React, {useState, useRef} from 'react';\nimport { useAuth } from '../../context/AuthProvider';\nimport { CenterContainer } from '../../components';\nimport { Alert } from 'react-bootstrap';\nimport {\n    StyledEmailIcon,\n    StyledPasswordIcon,\n    StyledButton,\n    StyledInput,\n    StyledLink,\n    StyledCard,\n    StyledTitle,\n    StyledForm\n} from './style';\n\n\nfunction SignUp() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const [error, setError]=useState('');\n    const [loading, setLoading] = useState(false);\n    const {signup} = useAuth()\n    const navigate = useNavigate();\n\n    async function handleSignUp(e){\n        e.preventDefault();\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError('Password does not match!')\n        }\n        try {\n            await signup(emailRef.current.value, passwordRef.current.value)\n            navigate(\"/login\");\n        } catch {\n            setError(\"Failed to sign up\");\n        }\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <CenterContainer>\n                <StyledCard>\n                    <StyledTitle>Sign Up</StyledTitle>\n                    <StyledForm onSubmit={handleSignUp}>\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\n\n                        <StyledInput id=\"email\">\n                            <StyledEmailIcon/>\n                            <StyledForm.Control\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                name=\"email\"\n                                ref={emailRef}\n                                required\n                            />\n                        </StyledInput>\n\n                        <StyledInput id=\"password\">\n                            <StyledPasswordIcon/>\n                            <StyledForm.Control\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                ref={passwordRef}\n                                required\n                            />\n                        </StyledInput>\n\n                        <StyledInput id=\"password-confirm\">\n                            <StyledPasswordIcon/>\n                            <StyledForm.Control\n                                name=\"password-confirm\"\n                                placeholder=\"Password Confirm\"\n                                type=\"password\"\n                                ref={passwordConfirmRef}\n                                required\n                            />\n                        </StyledInput>\n                        <StyledButton disabled={loading} type=\"submit\">\n                            {loading ? \"Creating account…\" : \"Sign Up\"}\n                        </StyledButton >\n                    </StyledForm>\n                </StyledCard>\n\n                <StyledLink>\n                    Already have an account? <Link to=\"/login\">Login</Link>\n                </StyledLink>\n            </CenterContainer>\n        </div>\n    )\n}\n\nexport default SignUp\n","import React, { useState, useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../../context/AuthProvider\";\nimport { CenterContainer, Logo } from \"../../components\";\nimport {\n  StyledEmailIcon,\n  StyledPasswordIcon,\n  StyledButton,\n  StyledInput,\n  StyledLink,\n  StyledCard,\n  StyledTitle,\n} from \"./style\";\n\nfunction Login() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  async function handleLogin(e) {\n    e.preventDefault();\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      navigate(\"/\");\n    } catch {\n      setError(\"Failed to log in\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <CenterContainer>\n      <StyledCard>\n        <StyledTitle>Login</StyledTitle>\n        <Logo />\n        <Form onSubmit={handleLogin}>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n\n          <StyledInput id=\"email\">\n            <StyledEmailIcon />\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              ref={emailRef}\n              required\n            />\n          </StyledInput>\n\n          <StyledInput id=\"password\">\n            <StyledPasswordIcon />\n            <Form.Control\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              ref={passwordRef}\n              required\n            />\n          </StyledInput>\n          <StyledButton disabled={loading} type=\"submit\">\n            Login\n          </StyledButton>\n        </Form>\n      </StyledCard>\n      <StyledLink>\n        <Link to=\"/forget-password\">Forget Password?</Link>\n      </StyledLink>\n      <StyledLink>\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </StyledLink>\n    </CenterContainer>\n  );\n}\n\nexport default Login;\n","import React, { useState, useRef }from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from '../../context/AuthProvider';\nimport {Form, Alert} from 'react-bootstrap';\nimport { CenterContainer } from '../../components';\nimport {\n    StyledEmailIcon,\n    StyledButton,\n    StyledInput,\n    StyledLink,\n    StyledCard,\n    StyledTitle\n} from './style';\n\n\nfunction ForgetPassword() {\n    const emailRef = useRef();\n    const [error, setError]=useState('');\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState('');\n    const { resetPassword } = useAuth();\n\n    async function handleReset(e) {\n        e.preventDefault();\n\n        try {\n            setError(\"\");\n            setLoading(true);\n            await resetPassword(emailRef.current.value);\n            setMessage(\"Check your inbox for further instructions!\");\n        } catch {\n            setError(\"Failed to reset password\");\n        }\n\n        setLoading(false);\n    }\n\n    return (\n        <CenterContainer>\n            <StyledCard>\n                <StyledTitle>Reset Password</StyledTitle>\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                {message && <Alert variant=\"success\">{message}</Alert>}\n                    <Form onSubmit={handleReset}>\n                        <StyledInput id=\"email\">\n                            <StyledEmailIcon/>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </StyledInput >\n\n                        <StyledButton disabled={loading} type=\"submit\">\n                            Reset Password\n                         </StyledButton>\n                    </Form>\n                    <StyledLink>\n                        <Link to=\"/login\">Login</Link>\n                    </StyledLink>\n            </StyledCard>\n        </CenterContainer>\n    )\n}\n\nexport default ForgetPassword\n","import React, { useState, useRef } from \"react\";\nimport { CenterContainer } from \"../../components\";\nimport { Alert } from \"react-bootstrap\";\nimport {\n  StyledEmailIcon,\n  StyledPasswordIcon,\n  StyledButton,\n  StyledInput,\n  StyledCard,\n  StyledTitle,\n  StyledForm,\n  StyledIcon,\n  StyledCollapse,\n  StyledLink\n} from \"./style\";\nimport { useAuth } from \"../../context/AuthProvider\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction Profile() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { currentUser, logout, updatePassword, updateEmail } = useAuth();\n  const navigate = useNavigate();\n\n  async function handlelogout() {\n    setError(\"\"); // clean current error context\n    try {\n      await logout();\n      navigate.push(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  function handleUpdate(e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        navigate.push(\"/login\");\n      })\n      .catch(() => {\n        setError(\"Failed to update account\");\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n  return (\n    <div>\n      <CenterContainer>\n        <StyledTitle>Profile</StyledTitle>\n\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <StyledCard>\n          <StyledCard.Body>\n            <StyledIcon>\n              {\" \"}\n              {currentUser.email.charAt(0).toUpperCase()}{\" \"}\n            </StyledIcon>\n            {currentUser.email}\n\n            <StyledForm.Group id=\"update\">\n              <StyledButton\n                className=\"btn-secondary\"\n                onClick={() => setOpen(!open)}\n              >\n                Settings\n              </StyledButton>\n\n              <StyledCollapse in={open}>\n                <StyledForm id=\"update-form\">\n                  <StyledInput id=\"email\">\n                    <StyledEmailIcon />\n                    <StyledForm.Control\n                      name=\"email\"\n                      placeholder={currentUser.email}\n                      type=\"email\"\n                      ref={emailRef}\n                    />\n                  </StyledInput>\n\n                  <StyledInput id=\"password\">\n                    <StyledPasswordIcon />\n                    <StyledForm.Control\n                      name=\"password\"\n                      placeholder=\"Blank remains unchanged\"\n                      type=\"password\"\n                      ref={passwordRef}\n                    />\n                  </StyledInput>\n\n                  <StyledInput id=\"password-confirm\">\n                    <StyledPasswordIcon />\n                    <StyledForm.Control\n                      name=\"password-confirm\"\n                      placeholder=\"Password Confirm\"\n                      type=\"password\"\n                      ref={passwordConfirmRef}\n                    />\n                  </StyledInput>\n\n                  <StyledButton\n                    disabled={loading}\n                    className=\"btn-secondary\"\n                    onClick={handleUpdate}\n                  >\n                    Update\n                  </StyledButton>\n                </StyledForm>\n              </StyledCollapse>\n            </StyledForm.Group>\n            \n            <StyledButton\n              disabled={loading}\n              variant=\"danger\"\n              onClick={handlelogout}\n            >\n              Logout\n            </StyledButton>\n\n            <StyledLink>\n              <Link to=\"/\">Back</Link>\n            </StyledLink>\n          </StyledCard.Body>\n        </StyledCard>\n      </CenterContainer>\n    </div>\n  );\n}\n\nexport default Profile;\n","import { getAuth } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, getDocs } from \"firebase/firestore/lite\";\nimport useSWR from \"swr\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const database = getFirestore(app);\n\nexport const auth = getAuth(app);\n\nexport async function getCourses() {\n  const coursesCol = collection(database, \"Courses\");\n  const coursesSnapshot = await getDocs(coursesCol);\n  const coursesList = coursesSnapshot.docs.map((doc) => doc.data());\n  return coursesList;\n}\n\nexport function useCourses() {\n  return useSWR(\"Courses\", getCourses);\n}\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useCourses } from \"../firebase\";\nimport {\n  Center,\n  VStack,\n  Box,\n  Button,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon, ChatIcon, QuestionOutlineIcon } from \"@chakra-ui/icons\";\nimport { CgProfile } from \"react-icons/cg\";\nimport {\n  useDisclosure,\n  Drawer,\n  DrawerBody,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n} from \"@chakra-ui/react\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport \"@fontsource/open-sans/700.css\";\n\nconst theme = extendTheme({\n  textStyles: {\n    h1: {\n      // you can also use responsive styles\n      fontSize: [\"32px\", \"48px\"],\n      lineHeight: \"110%\",\n      letterSpacing: \"-2%\",\n    },\n    h2: {\n      fontSize: [\"24px\", \"32px\"],\n      lineHeight: \"120%\",\n      letterSpacing: \"-1%\",\n    },\n  },\n  colors: {\n    kth: {\n      50: \"#186DE4\",\n      100: \"#186DE4\",\n      200: \"#186DE4\",\n      300: \"#186DE4\",\n      400: \"#186DE4\",\n      500: \"#1A54A6\",\n      600: \"#186DE4\",\n      700: \"#186DE4\",\n      800: \"#186DE4\",\n      900: \"#186DE4\",\n    },\n  },\n});\n\nfunction Home() {\n  const navigate = useNavigate();\n  function goToProfile() {\n    navigate(\"/profile\");\n  }\n\n  function goToHelp() {\n    //navigate(\"/help\");\n  }\n\n  function goToMessage() {\n    //navigate(\"/message\");\n  }\n\n  function goToCourse(course) {\n    navigate(\"/courses/\"+course.id.trim());\n  }\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [placement, setPlacement] = React.useState(\"left\");\n  const btnRef = React.useRef();\n\n  const { data: courses } = useCourses();\n\n  if (courses === undefined) {\n    return null;\n  }\n\n  return (\n    <div>\n      <ChakraProvider theme={theme}>\n        <IconButton\n          ref={btnRef}\n          colorScheme=\"kth\"\n          onClick={onOpen}\n          icon={<HamburgerIcon />}\n        ></IconButton>\n\n        <Center>\n          <Box textStyle=\"h1\">Homepage</Box>\n        </Center>\n        <VStack>\n          <Box textStyle=\"h2\" size=\"md\">\n            Courses\n          </Box>\n          {courses.map((course) => (\n            <Box\n              padding=\"10px\"\n              w={3 / 4}\n              borderColor=\"#f5f5f5\"\n              boxShadow=\"dark-lg\"\n              borderRadius=\"md\"\n              //shadow=\"xl\"\n              backgroundColor=\"white\"\n              key={course.name}\n              onClick={() => goToCourse(course)}\n            >\n              {course.name}\n            </Box>\n          ))}\n        </VStack>\n        <Drawer\n          isOpen={isOpen}\n          placement={placement}\n          onClose={onClose}\n          finalFocusRef={btnRef}\n        >\n          <DrawerOverlay />\n          <DrawerContent>\n            <DrawerCloseButton />\n            <DrawerHeader>Settings</DrawerHeader>\n            <DrawerBody>\n              <VStack>\n                <Button\n                  padding=\"10px\"\n                  w={3 / 4}\n                  boxShadow=\"md\"\n                  borderRadius=\"md\"\n                  shadow=\"md\"\n                  onClick={goToProfile}\n                  icon={<CgProfile />}\n                >\n                  Profile\n                </Button>\n                <Button\n                  padding=\"10px\"\n                  w={3 / 4}\n                  borderColor=\"#f5f5f5\"\n                  boxShadow=\"md\"\n                  borderRadius=\"md\"\n                  shadow=\"md\"\n                  margin=\"5px\"\n                  onClick={goToHelp}\n                  icon={<ChatIcon />}\n                >\n                  Chat\n                </Button>\n                <Button\n                  padding=\"10px\"\n                  w={3 / 4}\n                  borderColor=\"#f5f5f5\"\n                  boxShadow=\"md\"\n                  borderRadius=\"md\"\n                  shadow=\"md\"\n                  margin=\"5px\"\n                  onClick={goToMessage}\n                  icon={<QuestionOutlineIcon />}\n                >\n                  Help\n                </Button>\n              </VStack>\n            </DrawerBody>\n          </DrawerContent>\n        </Drawer>\n      </ChakraProvider>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react'\nimport {ListGroup} from 'react-bootstrap';\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { database } from \"../firebase\"\nimport {StyledQuestionItemTitle, StyledTimestampSmall, StyledUsernameSmall} from \"./auth/style\";\nimport { collection, getDocs, where, query } from \"firebase/firestore/lite\";\nimport useSWR from \"swr\";\n\nexport default function QuestionsList() {\n    async function getQuestions() {\n        \n        \n        let questionsCollection = collection(database, \"Questions\");\n        let questionsQuery = query(questionsCollection, where(\"courseId\", \"==\", courseID));\n        const snapshot = await getDocs(questionsQuery);\n        const questions = snapshot.docs.map((doc) => doc.data());\n        questions.sort((a,b) =>{ //in order to sort the message list by date\n            return a.date.seconds - b.date.seconds;\n        })\n        return questions;\n    }\n\n    function useQuestions() {\n        return useSWR(\"Questions\", getQuestions);\n    }\n\n    function toDate(timestamp) {\n      let date = new Date(timestamp*1000);\n      return date.toLocaleString();\n    }\n    \n    function goToQuestion(question) {\n      navigate(\"/question/\"+question.id.trim());\n    }\n\n    const navigate = useNavigate();\n    const courseID = useLocation().pathname.replace(\"/courses/\",\"\");\n    const {data: questions} = useQuestions();\n    console.log(questions);\n    console.log(courseID);\n    \n    if(questions=== undefined || questions === null || questions.length === 0) {\n      return ( <h3> No question has been asked yet !</h3>);\n    }\n\n    return (\n      <ListGroup>\n        {questions.map(question => \n          <ListGroup.Item  key={question.id} action onClick={() => goToQuestion(question)}> \n            <StyledQuestionItemTitle>{question.title}</StyledQuestionItemTitle>\n            <div className=\"d-flex justify-content-between\">\n              <StyledUsernameSmall>{question.userName}</StyledUsernameSmall>\n              <StyledTimestampSmall>{toDate(question.date.seconds)}</StyledTimestampSmall>\n            </div>\n          </ListGroup.Item>)}\n    </ListGroup>);\n};\n","import React, { useState, useRef } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport {\n  StyledEmailIcon,\n  StyledPasswordIcon,\n  StyledButtonAnswer,\n  StyledInput,\n  StyledLink,\n  StyledCard,\n  StyledTitle,\n  StyledCourseButton,\n  StyledForm,\n  StyledCourse,\n  StyledQuestionTitle,\n  StyledQuestionText,\n  StyledMessage,\n  StyledUserMessage,\n  StyledTimeMessage,\n  StyledCenteringDiv\n} from \"./auth/style\";\nimport {Form, Alert} from 'react-bootstrap';\nimport { useAuth } from '../context/AuthProvider';\nimport { QuestionContainer } from \"../components\";\nimport QuestionModel from \"../model/QuestionModel\";\nimport { database } from \"../firebase\"\nimport { getFirestore, collection, doc, getDocs, getDoc, where, query, setDoc } from \"firebase/firestore/lite\";\nimport useSWR from \"swr\";\nimport { VStack, Box, Button } from \"@chakra-ui/react\";\n\n\nfunction Forum(){\n    function toDate(seconds){\n        const dateObject = new Date(seconds*1000);\n        return dateObject.toLocaleString();\n    }\n\n    async function getQuestions() {\n        const questionsCollection = doc(database, \"Questions\", idQuestion);\n        const questionsSnapshot = await getDoc(questionsCollection);\n        //const questionsList = questionsSnapshot.docs.map((doc) => doc.data());\n        return questionsSnapshot.data();\n    }\n      \n    function useQuestion() {\n        return useSWR(\"Questions\", getQuestions);\n    }\n\n    async function getMessages() {\n        const messagesCollection = collection(database, \"Messages\");\n        const messagesQuery = query(messagesCollection, where(\"questionId\", \"==\", idQuestion));\n        const messagesSnapshot = await getDocs(messagesQuery);\n        const messagesList= messagesSnapshot.docs.map((doc) => {\n            return doc.data();\n        \n        });\n        messagesList.sort((a,b) =>{ //in order to sort the message list by date\n            return a.date.seconds - b.date.seconds;\n        })\n        return messagesList;\n    }\n      \n    function useMessages() {\n        return useSWR(\"Messages\", getMessages);\n    }\n\n\n    const idQuestion = useLocation().pathname.replace(\"/question/\",\"\");\n    const { currentUser, logout, updatePassword, updateEmail } = useAuth();\n    const {data: questions} = useQuestion();\n    const {data: messages} = useMessages();\n    const [newAnswer, setNewAnswer] = useState('');\n\n    function addAnswer(){\n        const newAnswerObject = {\n            text: newAnswer, \n            questionId: idQuestion, \n            date:{seconds: Date.now()/1000, nanoseconds: 0},\n            userName: currentUser.email\n        }\n        updateAnswer(newAnswerObject);\n    }\n\n    function updateAnswer(newAnswerObject){\n        const messagesCollection = collection(database, \"Messages\");\n        setDoc(doc(messagesCollection), newAnswerObject);\n    }\n\n    if(questions=== undefined || questions === null || questions.length === 0) {\n      return ( <QuestionContainer>\n                    <h1> This question is unavailable</h1>\n            </QuestionContainer>);\n    }\n\n    const question = questions[0];\n\n    if(question !== undefined && messages !== undefined){\n        return(\n            <QuestionContainer>\n                <StyledQuestionTitle>{question.title}</StyledQuestionTitle>\n                <StyledMessage>\n                    <StyledUserMessage>{question.userName}</StyledUserMessage>\n                    <StyledTimeMessage>{toDate(question.date.seconds)}</StyledTimeMessage>\n                    <StyledQuestionText>{question.text}</StyledQuestionText>\n                </StyledMessage>\n                <Form>\n                    <StyledInput id=\"email\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Write an answer...\"\n                            onChange={event => setNewAnswer(event.target.value)}\n                        />\n                    </StyledInput>\n                        <StyledButtonAnswer onClick={addAnswer}>\n                            Answer\n                        </StyledButtonAnswer>\n                </Form>     \n                <VStack>\n                    {messages.map((message) => (\n                        <StyledMessage>\n                        <StyledUserMessage>{message.userName}</StyledUserMessage>\n                        <StyledTimeMessage>{toDate(message.date.seconds)}</StyledTimeMessage>\n                        <StyledQuestionText>{message.text}</StyledQuestionText>\n                    </StyledMessage>\n                        \n                    ))}\n                </VStack>\n            \n            </QuestionContainer>\n        )\n    }\n    else{\n        return (\n            <QuestionContainer>\n                    <h1> This question is unavailable</h1>\n            </QuestionContainer>\n        )\n    }\n}\n\nexport default Forum;","import React from \"react\";\nimport { Home, SignUp, Login, ForgetPassword, QuestionsList, Profile, Forum } from \"./views\";\nimport { AuthProvider } from \"./context/AuthProvider\";\nimport { PrivateRoute, CenterContainer } from \"./components\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const {\n    model, // Model keeping application state\n  } = props;\n\n  // route\n  // function NoMatch() {\n  //   return (\n  //     <CenterContainer>\n  //       <h3>\n  //         No match for <code>{window.location.pathname}</code>\n  //       </h3>\n  //     </CenterContainer>\n  //   );\n  // }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <AuthProvider>\n          <Routes>\n            <Route exact path=\"/\" element={<PrivateRoute />}>\n              <Route exact path=\"/\" element={<Home model={model} />} />\n            </Route>\n            <Route exact path=\"/login\" element={<Login />} />\n            <Route exact path=\"/signup\" element={<SignUp />} />\n            <Route exact path=\"/forget-password\" element={<ForgetPassword />} />\n            <Route exact path=\"/courses/*\" element={<QuestionsList />}/>\n            <Route exact path=\"/question/*\" element={<Forum />}/>\n            <Route exact path=\"/profile\" element={<PrivateRoute />}>\n              <Route exact path=\"/profile\" element={<Profile />} />\n            </Route>\n            {/* unmatched Route */}\n            {/* <Route path=\"*\" element={<NoMatch />} /> */}\n          </Routes>{\" \"}\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import {auth} from '../firebase';\n\nclass UserModel{\n    constructor(\n        currentUser=null,\n        courses=[]\n    ){\n        this.observers = [];\n        this._currentUser = currentUser;\n        this._courses = courses;\n        auth.onAuthStateChanged((user) => {\n            this.currentUser = user;\n        });\n    }\n\n    /** Helper function to reset all instance internal properties without notifying the observers */\n    resetModel() {\n        this._currentUser = null;\n        this._courses = [];\n    }\n\n    /**\n     * Setter function to always notify observers when the current user is updated\n     * @param {User} newValue - Updated value for the currentUser property\n     */\n    set currentUser(newValue) {\n        this._currentUser = newValue;\n        this.notifyObservers();\n    }\n\n    /** Getter function for the currentUser property (required for setter function) */\n    get currentUser() {\n        return this._currentUser;\n    }\n\n        /**\n     * Setter function to always notify observers when the user's courses are updated\n     * @param {Courses[]} newValue - Updated value for the courses property\n     */\n    set courses(newValue) {\n        this._courses = newValue;\n        this.notifyObservers();\n    }\n\n    /** Getter function for the courses property (required for setter function) */\n    get courses() {\n        return this._courses;\n    }\n\n    /**\n     * Adds an observer calling the specified callback function\n     * @param {observerCallback} callback - Callback function to be called when observed value changes\n     */\n    addObserver(callback) {\n        this.observers = [...this.observers, callback];\n    }\n\n    /**\n     * Removes the specified observer callback\n     * @param {observerCallback} callback - Callback function to be removed\n     */\n    removeObserver(callback) {\n        this.observers = this.observers.filter(\n            (observer) => observer !== callback\n        );\n    }\n\n    /** Calls each callback function in the observers array */\n    notifyObservers() {\n        this.observers.forEach((callback) => {\n            setTimeout(() => {\n                try {\n                    callback();\n                } catch (error) {\n                    console.error(error);\n                }\n            }, 0);\n        });\n    }\n\n}\n\nexport default UserModel;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { UserModel } from \"./model\";\n\n// Initialize model\nconst myModel = new UserModel();\n\nReactDOM.render(<App model={myModel} />, document.getElementById(\"root\"));\n"],"sourceRoot":""}